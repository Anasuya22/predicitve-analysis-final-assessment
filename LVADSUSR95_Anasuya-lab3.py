# -*- coding: utf-8 -*-
"""Lab3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yw7z0FDBBQ6LrAfMMdlaboLtYOhd7uvb
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import warnings
warnings.filterwarnings('ignore')
from sklearn.preprocessing import StandardScaler

warnings.filterwarnings('ignore')

data = pd.read_csv("/content/seeds.csv")
# Replace '?' with NaN
data.replace('?', pd.NA, inplace=True)


# Fill missing values with the mean
data.fillna(data.mean(), inplace=True)

data.columns = data.columns.str.strip()
data.columns



# Extract the features (assuming they are in columns 1 and 2, adjust as necessary)
X = data.iloc[:, [0,1,2,3,4,5,6]].values

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

#  the within-cluster sum of squares (WCSS)
wcss = []

# Try different values of k (number of clusters)
for k in range(1, 11):
    # Initialize KMeans model
    kmeans = KMeans(n_clusters=k, random_state=42)

    # Fit the model to the scaled data
    kmeans.fit(X_scaled)

    # Append WCSS to the list
    wcss.append(kmeans.inertia_)

# Plot the elbow curve
plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), wcss, marker='o', linestyle='--')
plt.xlabel('Number of clusters')
plt.ylabel('Within-cluster Sum of Squares (WCSS)')
plt.title('Elbow Method')
plt.xticks(range(1, 11))
plt.grid(True)
plt.show()




# from elbow method we can say that the appropriate no of clusters (k) is 3

k = 3

# Initialize KMeans object
kmeans = KMeans(n_clusters=k)

# Fit KMeans clustering algorithm to the data
kmeans.fit(X)

# Get cluster centroids and labels
centroids = kmeans.cluster_centers_
labels = kmeans.labels_

# Visualize the clusters
plt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis')
plt.scatter(centroids[:, 0], centroids[:, 1], marker='x', color='red')
plt.title('K-means Clustering')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.show()

# Output cluster centroids and labels
print("Cluster centroids:")
print(centroids)
print("\nLabels:")
print(labels)